<!DOCTYPE html>
<html>
<head>
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
		integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
		crossorigin="" />

	<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
		integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
		crossorigin="">
	</script>  
	<link rel="stylesheet" href="https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.css" />
	<script src="https://api.mapbox.com/mapbox.js/v3.1.1/mapbox.js"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
	<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
	<title>Contacts</title>
	<style>
        .card{
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
        }
        .card-title{
            text-align: center;
            color: #656565;
        }
        .selection{
            margin-bottom:0.75rem;
            color:#929292;
        }
        .dropdown{
            width:30%;
            color: #929292;
            border-radius: 5%;
        }
		i{			
			width:15px;
		}
		.iconClass{
			margin-right:3px;
		}
		table{
			zoom:75%;
		}
		tr>td{
			cursor:pointer;
			color: #656565;
		}
		p{
			color: #656565;
		}
		.listEmpty{
			margin-bottom:50px;
		}
    </style>
</head>
<style>
	#myMap{
		width:100%;
		height: 600px;
		margin-left: 5px;
	}
</style>
<body>
	<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="/mailer">
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTeT1mojRZxGhiWlFYCAXKRmzh9Y7FiS_DV_g&usqp=CAU" width="30" height="30" class="d-inline-block align-top" alt="">
            ContactBook 
          </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-item nav-link" href="/mailer">Create Contact</a>
            <a class="nav-item nav-link active" href="/contacts">Contacts</a>
          </div>
        </div>
        <form class="form-inline">
            <button onclick="location.href='/logout'" type="button" class="btn btn-outline-danger  my-2 my-sm-0">Log Out</button>
        </form>
    </nav>
	<section id="initialPage">
		<div class="container">  
			<div class="row justify-content-md-center">
				<div class="card" style="width: 100rem; margin-top: 1%">
					<div class="card-body">
						<% if (values.length == 0){ %>
							<h5 class="card-title">Contact List Empty </h5>
							<div class="table-responsive">
								<table class="table table-hover">
									<thead>
									  <tr>
										<th scope="col"> Suffix </th>
										<th scope="col"> First Name</th>
										<th scope="col"> Last Name</th>
										<th scope="col"> Street </th>
										<th scope="col"> City </th>
										<th scope="col"> State </th>
										<th scope="col"> Zip </th>
										<th scope="col"> Phone </th>
										<th scope="col"> Email </th>
										<th scope="col"> Contact Phone </th>
										<th scope="col"> Contact Mail </th>
										<th scope="col"> Contact Email </th>
										<th scope="col"> Latitude </th>
										<th scope="col"> Longitude </th>
										<th scope="col">Actions</th>
									  </tr>
									</thead>
								</table>
								<div class="listEmpty">

								</div>
							</div>
							
						<% } else{ %>
							<h5 class="card-title">Contact Details </h5>
							<div class="table-responsive">
								<table class="table table-hover">
									<thead>
									  <tr>
										<th scope="col"> Suffix </th>
										<th scope="col"> First Name</th>
										<th scope="col"> Last Name</th>
										<th scope="col"> Street </th>
										<th scope="col"> City </th>
										<th scope="col"> State </th>
										<th scope="col"> Zip </th>
										<th scope="col"> Phone </th>
										<th scope="col"> Email </th>
										<th scope="col"> Contact Phone </th>
										<th scope="col"> Contact Mail </th>
										<th scope="col"> Contact Email </th>
										<th scope="col"> Latitude </th>
										<th scope="col"> Longitude </th>
										<th scope="col">Actions</th>
									  </tr>
									</thead>
									
									<tbody>
										<% for (rows in values) { %>
											<tr onClick="flyMap(this)" id="<%= values[rows]["_id"] %>"  data-id="<%= values[rows]["_id"] %>">
												<% for (keys in values[rows]) { %>
													<% if (keys != "_id") {%>
														<td data-key="<%= keys %>" data-value="<%= values[rows][keys] %>"> <%= values[rows][keys] %></td>
													<% } %>
												<% } %>
												<td>
													<div style="display: flex;">
														<button class="btn btn-outline-info iconClass" onclick="showEditPage(this)"><i class="fas fa-edit"></i></button>
														<button class="btn btn-outline-danger iconClass" onclick="deleteContact(this)"><i class="fas fa-trash-alt"></i></button> 
													</div>
												</td>
											</tr>
										<% } %>
									</tbody>
								  </table>
								</div>
						<% } %>
						
						<div id="myMap"></div>
					</div>
				</div>
			</div>

		
	</section>
	
	
	
	
	
	
	<section id="editPage" style="display:none;">
		
		
		
		<div class="container">  
			<div class="row justify-content-md-center">
				<div class="card" style="width: 40rem; margin-top: 8%">
					<div class="card-body">
						<h5 class="card-title">Edit Contact</h5>
							<form method="post" action="/contacts/update">
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="radio" id="mr" name="suffix" value="Mr.">
									<label class="form-check-label" for="mr">Mr.</label>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="radio" id="mrs" name="suffix" value="Mrs.">
									<label class="form-check-label" for="mrs">Mrs.</label>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="radio" id="ms" name="suffix" value="Ms.">
									<label class="form-check-label" for="ms">Ms.</label>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="radio" id="dr" name="suffix" value="Dr.">
									<label class="form-check-label" for="dr">Dr.</label>
								</div>
								<div class="input-group mb-3">
									<input type="text" id="firstname" name="firstname" value="" required class="form-control" placeholder="First Name">  &nbsp;
									<input type="text" id="lastname" name="lastname" value="" required class="form-control" placeholder="Last Name">  &nbsp;
								</div>
								<div class="input-group mb-3">
									<input type="text" id="street" name="street" value="" class="form-control" placeholder="Street">  &nbsp;
									<input type="text" id="city" name="city" value="" required class="form-control" placeholder="City">  &nbsp;
								</div>
								<div class="input-group mb-3">
									<label class="input-group-text" for="state">State</label>
									<select class="form-select  dropdown" name="state" id="state">
									<option value="NJ">NJ</option>
									<option value="NY">NY</option>
									<option value="PA">PA</option>
									<option value="CT">CT</option>
									</select> &nbsp;
									<input type="text" id="zip" name="zip" value="" required class="form-control" placeholder="Zip">
								</div>
								<div class="input-group mb-3">
									<input type="tel" id="phone" name="phone" value="" required class="form-control" placeholder="Telephone">  &nbsp;
									<input type="email" id="email" name="email" value="" required class="form-control" placeholder="Email">  &nbsp;
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="checkbox" id="cPhone" name="contactphone" value="Phone">
									<label class="form-check-label" for="contactphone">Phone</label>
									<input id="contactIdhidden" type="hidden" name="contactId" value = ""/>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="checkbox" id="cMail" name="contactmail" value="Mail">
									<label class="form-check-label" for="contactmail">Mail</label>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="checkbox" id="cEmail" name="contactemail" value="Email">
									<label class="form-check-label" for="contactemail">Email</label>
								</div>
								<div class="form-check form-check-inline selection">
									<input class="form-check-input" type="checkbox" id="any" name="contactany" value="Any" checked="checked">
									<label class="form-check-label" for="contactany">Any</label>
								</div>
								<div class="input-group mb-3">
									<button type="button" onclick="location.href='/contacts'" class="btn btn-danger">Cancel</button> &nbsp;
									<button type="submit" class="btn btn-info">Update</button> 
								</div>
							</form>
					</div>
				</div>
			</div>
		</div>
	</section>
    
</body>






<script>
	var mymap, geocoder, marker = [], locations;
	L.mapbox.accessToken = 'pk.eyJ1Ijoic2pvc2hpNCIsImEiOiJjbDIzaWI4cW8wZDl1M2lxZTJlMjdraWRxIn0.XbNTOeb7oQStDorVMlGzWQ';
	mymap = L.mapbox.map('myMap').setView([ 41.08262, -74.17839 ], 2);
    L.tileLayer(`https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=${L.mapbox.accessToken}`, {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox/streets-v11',
    tileSize: 512,
    zoomOffset: -1,
    accessToken: L.mapbox.accessToken
    }).addTo(mymap)
    geocoder = L.mapbox.geocoder('mapbox.places');
	marker = {
        icon: L.mapbox.marker.icon({
            'marker-size':'large',
            'marker-color':'#fa0'
        })};
    locations = {};
	
	var information;
	let elements = document.getElementsByTagName('tr');
	var contactList = []
	for (let i = 1; i < elements.length; i++){
		tempObject = {}
		tempObject["id"] = elements[i].dataset.id;
		childNodes = elements[i].children;
		for (let j = 0; j < 14; j ++){
			tempObject[childNodes[j].dataset.key] = childNodes[j].textContent;  
		}
		contactList[i-1] = tempObject;
	}

	



	var shortDescription;
	function customTip() {
		this.unbindTooltip();
		if(!this.isPopupOpen()) this.bindTooltip(shortDescription).openTooltip();
	}

	function customPop() {
		this.unbindTooltip();
	}
	
	for (var i = 0; i < contactList.length; i++){
		tempLat = parseFloat(contactList[i]["latitude"]);
		tempLong = parseFloat(contactList[i]["longitude"]);
		let marker = L.marker([tempLat, tempLong]).addTo(mymap);
		shortDescription = contactList[i]["suffix"] + " " + contactList[i]["firstname"] + " " + contactList[i]["lastname"]; 
		longDescription = ""
		longDescription += "<p> Name: " + shortDescription + "</p>";
		longDescription += "<p> Street: " + contactList[i]["street"] + "</p>";
		longDescription += "<p> City and State: " + contactList[i]["city"] + ", " + contactList[i]["state"] + "</p>"
		longDescription += "<p> Zip: " + contactList[i]["zip"] + "</p>";
		longDescription += "<p> Phone: " + contactList[i]["phone"] + "</p>";
		longDescription += "<p> Latitude : " + contactList[i]["latitude"] + "</p>";
		longDescription += "<p> Longitude : " + contactList[i]["longitude"] + "</p>";
		
		shortDescription = "<p>" + shortDescription + "</p>";
		marker.bindPopup(longDescription);
		marker.on('mouseover', customTip);
		marker.on('click', customPop);
	}


	const flyMap = (node) =>{
		let latitude = node.children[12].dataset.value;
		let longitude = node.children[13].dataset.value;
		let coordinates = [latitude, longitude];
		mymap.flyTo(coordinates, 8);
	}


	const showEditPage = (node) => {
		let rowNode = node.parentNode.parentNode.parentNode;
		let mainSection = document.getElementById("initialPage");
		mainSection.style.display = 'none';
		let editSection = document.getElementById("editPage");
		editSection.style.display = 'block';
		let childNodes = rowNode.children;
		console.log("Childnodes", childNodes);
		for (let i = 1; i < 9; i++){
			if (i == 5){
				continue;
			}
			document.getElementById(rowNode.children[i].dataset.key).value = rowNode.children[i].textContent;		
		}
		document.getElementById(rowNode.children[5].dataset.key).value = rowNode.children[5].dataset.value;

		if (rowNode.children[0].dataset.value == "Mr.") document.getElementById('mr').checked = true;
		else if (rowNode.children[0].dataset.value == "Mrs.") document.getElementById('mrs').checked = true;
		else if (rowNode.children[0].dataset.value == "Ms.") document.getElementById('ms').checked = true;
		else document.getElementById('dr').checked = true;



		if (childNodes[9].dataset.value == "Yes" && childNodes[10].dataset.value == "Yes" && childNodes[11].dataset.value == "Yes"){
			document.getElementById("any").checked = true;	
		} 
		else{
			document.getElementById("any").checked = false;
			if (childNodes[9].dataset.value == "Yes"){
				document.getElementById("cPhone").checked = true
			}
			if (childNodes[10].dataset.value == "Yes"){
				document.getElementById("cMail").checked = true
			}
			if (childNodes[11].dataset.value == "Yes"){
				document.getElementById("cEmail").checked = true
			}
		}
		document.getElementById("contactIdhidden").value = rowNode.dataset.id;
	}
	

	const hideEditPage = (node) => {
		let mainSection = document.getElementById("initialPage");
		mainSection.style.display = 'block';
		let editSection = document.getElementById("editPage");
		editSection.style.display = 'none';
	}


	const deleteContact = async (node) => {
		parent = node.parentNode.parentNode.parentNode;
		let response = await axios.post('/contacts/delete', {id: parent.dataset.id});
		if (response.data.message == "success"){
			window.location.reload();
		}
	}
</script>
</html>


